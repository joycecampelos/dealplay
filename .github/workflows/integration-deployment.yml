name: CI and CD

#env:
#      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      
      - name: tests - backend
        run: |
          cd backend
          npm install
          npm run test
      
      - name: tests - frontend
        run: |
          cd frontend
          npm install
          npm run test

  deploy-render:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: deploy backend to render
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.MY_RENDER_SERVICE_ID }}
          api-key: ${{ secrets.MY_RENDER_API_KEY }}
          wait-for-success: true
  
  #deploy-vercel:
  #  needs: deploy-render
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: checkout repository
  #      uses: actions/checkout@v4

  #    - name: install vercel CLI
  #      run: npm install --global vercel@latest
      
  #    - name: pull vercel environment information
  #      run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
  #    - name: build project artifacts
  #      run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
  #    - name: deploy project artifacts to vercel
  #      run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
